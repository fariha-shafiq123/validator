# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12nW4Ug7lg-X8fzu26fEcK0HdzZmyBt0g
"""

import ipywidgets as widgets
from IPython.display import display, HTML, clear_output
from lxml import etree
import io

# Custom Styling with Proper Margins
display(HTML("""
<style>
    body {
        font-family: Arial, sans-serif;
    }
    .main-container {
        max-width: 700px;
        margin: 30px auto;
        padding: 30px;
        background: #f8f9fa;
        text-align: center;
        border-radius: 12px;
    }
    .title {
        color: #2C3E50;
        font-size: 26px;
        font-weight: bold;
        margin-bottom: 10px;
    }
    .subtitle {
        color: #5D6D7E;
        font-size: 15px;
        margin-bottom: 30px;
    }
    .upload-box {
        display: flex;
        justify-content: center;
        gap: 30px;
        margin-bottom: 25px;
    }
    .upload-section {
        text-align: center;
    }
    .validate-button {
        width: 250px;
        height: 45px;
        font-size: 16px;
        font-weight: bold;
        border-radius: 22px;
        background: #28a745;
        color: white;
        border: none;
        cursor: pointer;
        transition: 0.3s;
        margin-top: 20px;
    }
    .validate-button:hover {
        background: #218838;
    }
    .error-box {
        background: #ffebeb;
        color: #b30000;
        padding: 14px;
        border-radius: 10px;
        text-align: left;
        font-weight: bold;
        margin-top: 20px;
    }
    .success-box {
        background: #e6ffe6;
        color: #007f00;
        padding: 14px;
        border-radius: 10px;
        font-weight: bold;
        margin-top: 20px;
    }
</style>
"""))

# Title & Description
display(HTML("""
<div class="main-container">
    <div class="title">XML Validator with XSD</div>
    <div class="subtitle">Upload your XML & XSD files to validate.</div>
"""))

# Upload Widgets (Side-by-Side Layout with Margin)
xml_uploader = widgets.FileUpload(accept='.xml', multiple=False, description="üìÇ Upload XML")
xsd_uploader = widgets.FileUpload(accept='.xsd', multiple=False, description="üìÇ Upload XSD")

file_upload_section = widgets.HBox([
    widgets.VBox([widgets.HTML("<b>üîπ XML File:</b>"), xml_uploader], layout=widgets.Layout(align_items='center')),
    widgets.VBox([widgets.HTML("<b>üîπ XSD File:</b>"), xsd_uploader], layout=widgets.Layout(align_items='center'))
], layout=widgets.Layout(justify_content='center', margin='20px'))

display(file_upload_section)

# Validate Button
validate_button = widgets.Button(description="‚úÖ Validate XML",
                                 layout=widgets.Layout(width='250px', height='45px', margin='20px'))
validate_button.add_class("validate-button")

# Output Area
output = widgets.Output()

# Layout to Center Everything with Margin
layout_box = widgets.VBox([validate_button, output],
                          layout=widgets.Layout(align_items='center', margin='30px'))

display(layout_box)
display(HTML("</div>"))  # Closing main-container

def validate_xml(xml_content, xsd_content):
    """Validates XML against XSD and returns a formatted response."""
    try:
        xml_doc = etree.parse(xml_content)
        xsd_doc = etree.XMLSchema(etree.parse(xsd_content))

        if xsd_doc.validate(xml_doc):
            return "<div class='success-box'>‚úÖ XML is valid! üéâ</div>"
        else:
            errors = xsd_doc.error_log
            if errors:
                error_messages = "<ul style='padding-left: 20px;'>"
                for error in errors:
                    error_messages += f"<li>‚ùå <b>Line {error.line}:</b> {error.message}</li>"
                error_messages += "</ul>"
                return f"<div class='error-box'>‚ö†Ô∏è XML Validation Failed! Fix these errors:</div>{error_messages}"
            else:
                return "<div class='error-box'>‚ùå XML is NOT valid, but no detailed errors were found.</div>"
    except Exception as e:
        return f"<div class='error-box'>‚ö†Ô∏è An error occurred while processing: {str(e)}</div>"

def on_validate_button_click(b):
    """Handles validation when button is clicked."""
    output.clear_output()

    if not xml_uploader.value or not xsd_uploader.value:
        with output:
            display(HTML("<div class='error-box'>‚ö†Ô∏è Please upload both XML and XSD files first.</div>"))
        return

    xml_file = list(xml_uploader.value.values())[0]['content']
    xsd_file = list(xsd_uploader.value.values())[0]['content']

    xml_stream = io.BytesIO(xml_file)
    xsd_stream = io.BytesIO(xsd_file)

    with output:
        display(HTML("<p style='color: blue;'>üîÑ Validating... Please wait.</p>"))

    result = validate_xml(xml_stream, xsd_stream)

    with output:
        output.clear_output()
        display(HTML(result))

validate_button.on_click(on_validate_button_click)